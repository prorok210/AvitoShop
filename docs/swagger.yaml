basePath: /api
definitions:
  models.AuthRequest:
    properties:
      name:
        example: username
        type: string
      password:
        example: secret123
        type: string
    required:
    - name
    - password
    type: object
  models.AuthResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  models.CoinHistory:
    properties:
      received:
        items:
          $ref: '#/definitions/models.ReceivedTx'
        type: array
      sent:
        items:
          $ref: '#/definitions/models.SentTx'
        type: array
    type: object
  models.Error400Response:
    properties:
      error:
        example: Неверный запрос
        type: string
    type: object
  models.Error401Response:
    properties:
      error:
        example: Неавторизован
        type: string
    type: object
  models.Error404Response:
    properties:
      error:
        example: Не найдено
        type: string
    type: object
  models.Error500Response:
    properties:
      error:
        example: Внутренняя ошибка сервера
        type: string
    type: object
  models.InfoResponse:
    properties:
      coinHistory:
        $ref: '#/definitions/models.CoinHistory'
      coins:
        example: 100
        type: integer
      inventory:
        items:
          $ref: '#/definitions/models.InventoryItem'
        type: array
    type: object
  models.InventoryItem:
    properties:
      quantity:
        example: 2
        type: integer
      type:
        example: weapon
        type: string
    type: object
  models.ReceivedTx:
    properties:
      amount:
        example: 50
        type: integer
      fromUser:
        example: Alice
        type: string
    type: object
  models.SentTx:
    properties:
      amount:
        example: 30
        type: integer
      toUser:
        example: Bob
        type: string
    type: object
  models.SuccessResponse:
    properties:
      message:
        example: Успешный запрос
        type: string
    type: object
  models.TransactionRequest:
    properties:
      amount:
        example: 100
        type: integer
      toUser:
        example: username
        type: string
    required:
    - amount
    - toUser
    type: object
host: localhost:8083
info:
  contact: {}
  description: API для отбора на стажировку в Авито
  title: API Avito shop
  version: 1.0.0
paths:
  /auth:
    post:
      consumes:
      - application/json
      description: Аутентификация с помощью имени пользователя и пароля и возвращение
        access и refresh токенов.
      parameters:
      - description: Auth credentials
        in: body
        name: body
        schema:
          $ref: '#/definitions/models.AuthRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Успешная аутентификация
          schema:
            $ref: '#/definitions/models.AuthResponse'
        "400":
          description: Неверный запрос
          schema:
            $ref: '#/definitions/models.Error400Response'
        "401":
          description: Неавторизован
          schema:
            $ref: '#/definitions/models.Error401Response'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/models.Error500Response'
      summary: Аутентификация и получение JWT-токена.
      tags:
      - User
  /buy/{item}:
    get:
      description: 'Покупка предмета за монеты: списывается стоимость предмета с баланса
        пользователя и создается заказ.'
      parameters:
      - description: Название предмета
        in: path
        name: item
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Успешный запрос
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "400":
          description: Неверный запрос.
          schema:
            $ref: '#/definitions/models.Error400Response'
        "401":
          description: Неавторизован.
          schema:
            $ref: '#/definitions/models.Error401Response'
        "404":
          description: Предмет не найден.
          schema:
            $ref: '#/definitions/models.Error404Response'
        "500":
          description: Внутренняя ошибка сервера.
          schema:
            $ref: '#/definitions/models.Error500Response'
      security:
      - BearerAuth: []
      summary: Купить предмет за монеты.
      tags:
      - Merch
  /info:
    get:
      description: Получение баланса, инвентаря и истории транзакций (отправленных
        и полученных монет) для авторизованного пользователя.
      produces:
      - application/json
      responses:
        "200":
          description: Успешный ответ
          schema:
            $ref: '#/definitions/models.InfoResponse'
        "400":
          description: Неверный запрос
          schema:
            $ref: '#/definitions/models.Error400Response'
        "401":
          description: Неавторизован
          schema:
            $ref: '#/definitions/models.Error401Response'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/models.Error500Response'
      security:
      - BearerAuth: []
      summary: Получить информацию о монетах, инвентаре и истории транзакций.
      tags:
      - User
  /sendCoin:
    post:
      consumes:
      - application/json
      description: Перевод монет от одного пользователя к другому.
      parameters:
      - description: SendCoinRequest
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.TransactionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Успешный запрос
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "400":
          description: Неверный запрос
          schema:
            $ref: '#/definitions/models.Error400Response'
        "401":
          description: Неавторизован
          schema:
            $ref: '#/definitions/models.Error401Response'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/models.Error500Response'
      security:
      - BearerAuth: []
      summary: Отправить монеты другому пользователю.
      tags:
      - Transactions
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
